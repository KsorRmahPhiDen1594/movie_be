const Movie = require('../../models/movie.model');

// üìå L·∫•y danh s√°ch t·∫•t c·∫£ phim (c√≥ th·ªÉ bao g·ªìm c·∫£ phim ·∫©n)
const getAllMovies = async (req, res) => {
  try {
    const movies = await Movie.find();
    res.status(200).json(movies);
  } catch (error) {
    res.status(500).json({ message: 'L·ªói khi l·∫•y danh s√°ch phim', error });
  }
};

// üìå L·∫•y th√¥ng tin 1 phim theo ID
const getMovieById = async (req, res) => {
  try {
    const { id } = req.params;
    const movie = await Movie.findById(id);
    if (!movie) return res.status(404).json({ message: 'Phim kh√¥ng t·ªìn t·∫°i' });
    res.status(200).json(movie);
  } catch (error) {
    res.status(500).json({ message: 'L·ªói khi l·∫•y phim', error });
  }
};

// üìå C·∫≠p nh·∫≠t tr·∫°ng th√°i hi·ªÉn th·ªã c·ªßa phim (·∫©n / hi·ªán)
const toggleMovieVisibility = async (req, res) => {
  try {
    const { id } = req.params;
    const movie = await Movie.findById(id);
    if (!movie) return res.status(404).json({ message: 'Phim kh√¥ng t·ªìn t·∫°i' });

    movie.isActive = !movie.isActive;  // S·ª≠ d·ª•ng isActive thay v√¨ isHidden
    await movie.save();
    res.status(200).json({ message: 'C·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh c√¥ng', movie });
  } catch (error) {
    res.status(500).json({ message: 'L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i', error });
  }
};

// üìå X√≥a phim theo ID
const deleteMovie = async (req, res) => {
  try {
    const { id } = req.params;
    const deleted = await Movie.findByIdAndDelete(id);
    if (!deleted) return res.status(404).json({ message: 'Phim kh√¥ng t·ªìn t·∫°i' });
    res.status(200).json({ message: 'X√≥a phim th√†nh c√¥ng' });
  } catch (error) {
    res.status(500).json({ message: 'L·ªói khi x√≥a phim', error });
  }
};

module.exports = {
  getAllMovies,
  getMovieById,
  toggleMovieVisibility,
  deleteMovie,
};
